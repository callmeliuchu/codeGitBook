class Solution {
public:
    /**
     * @param candidates: A list of integers
     * @param target:An integer
     * @return: A list of lists of integers
     */
    vector<int>vec;
    vector<vector<int> >res;
    vector<int>can;
    set<vector<int> >aSet;
    vector<vector<int> > combinationSum(vector<int> &candidates, int target) {
       can = candidates;
       f(0,target);
       return res;
    }
    void f(int index,int sum){
        if(sum<=0){ 
            if(sum==0){
                vector<int>temp=vec;
                sort(temp.begin(),temp.end());
                if(aSet.find(temp)==aSet.end()){
                    res.push_back(temp); 
                    aSet.insert(temp);
                }
            }
            return;
        }
        
        for(int i=index;i<can.size();i++){
            vec.push_back(can[i]);
            f(index,sum-can[i]); 
            vec.pop_back();
        }
    }
};