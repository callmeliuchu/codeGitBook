class Solution {
public:
    /**
      * @param start, a string
      * @param end, a string
      * @param dict, a set of string
      * @return an integer
      */

    int ladderLength(string start, string end, unordered_set<string> &dict) {
        map<string,int>amap;
        queue<string>q;
        q.push(start);
        amap[start]=1;
        while(!q.empty() && !dict.empty()){
            string curr = q.front();
            q.pop();
            int n = amap[curr];
            for(int i=0;i<curr.size();i++){
                string temp=curr;
                for(int j='a';j<='z';j++){
                    if(temp[i]==j){
                        continue;
                    }else{
                        temp[i]=j;
                    }
                    
                    if(dict.find(temp)!=dict.end()){
                        dict.erase(temp);
                        q.push(temp);
                        amap[temp]=n+1;
                    }
                    
                    if(temp==end){
                        return amap[temp];
                    }
                    
                }
                
                
            }
        }


     return 0;


    }
    

    

    
};