/**
 * Definition of ListNode
 * class ListNode {
 * public:
 *     int val;
 *     ListNode *next;
 *     ListNode(int val) {
 *         this->val = val;
 *         this->next = NULL;
 *     }
 * }
 */
class Solution {
public:
    /**
     * @param lists: a list of ListNode
     * @return: The head of one sorted list.
     */
    ListNode *mergeKLists(vector<ListNode *> &lists) {
        if(lists.size()==0){
            return NULL;
        }
        vector<int>vec;
        for(int i=0;i<lists.size();i++){
            for(ListNode *head=lists[i];head!=NULL;head=head->next){
                vec.push_back(head->val);
            }
        }
        if(vec.size()==0){
            return NULL;
        }
        sort(vec.begin(),vec.end());
        ListNode *p = new ListNode(vec[0]);
        ListNode *q = NULL;
        ListNode *ret = p;
        for(int i=1;i<vec.size();i++){
            q = new ListNode(vec[i]);
            p->next = q;
            p = q;
        }
        p->next = NULL;
        return ret;
    }
};


