/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    /**
     * @param head: the list
     * @param k: rotate to the right k places
     * @return: the list after rotation
     */
    ListNode *rotateRight(ListNode *head, int k) {
        ListNode *p = head;
        ListNode  *storeHead = head;
        ListNode *q=NULL;
        int size = 0;
        while(head){
            size++;
            q=head;
            head=head->next;
        }
        if(size==0){
            return NULL;
        }
        k = k%size;
        if(k==0){
            return storeHead;
        }
        int moveToLoc = size - k;
        for(int i=0;i<moveToLoc-1;i++){
            p=p->next;
        }
        head=p->next;
        p->next=NULL;
        q->next=storeHead;
        return head;
        
        
    }
};