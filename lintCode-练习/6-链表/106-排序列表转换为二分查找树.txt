/**
 * Definition of ListNode
 * class ListNode {
 * public:
 *     int val;
 *     ListNode *next;
 *     ListNode(int val) {
 *         this->val = val;
 *         this->next = NULL;
 *     }
 * }
 * Definition of TreeNode:
 * class TreeNode {
 * public:
 *     int val;
 *     TreeNode *left, *right;
 *     TreeNode(int val) {
 *         this->val = val;
 *         this->left = this->right = NULL;
 *     }
 * }
 */
class Solution {
public:
    /**
     * @param head: The first node of linked list.
     * @return: a tree node
     */
    TreeNode *sortedListToBST(ListNode *head) {
        int len = 0;
        ListNode *temp=head;
        while(temp){
            len++;
            temp=temp->next;
        }
        if(len==0){
            return NULL;
        }
        if(len==1){
            return new TreeNode(head->val);
        }
        if(len==2){
            TreeNode *treeHead = new TreeNode(head->val);
            treeHead->right = new TreeNode(head->next->val);
            return treeHead;
        }
        int cnt = 0;
        temp=head;
        ListNode *pretemp = NULL;
        while(cnt<len/2){
            cnt++;
            pretemp = temp;
            temp = temp->next;
        }
        pretemp->next=NULL;
        TreeNode *treeHead = new TreeNode(temp->val);
        treeHead->right = sortedListToBST(temp->next);
        treeHead->left = sortedListToBST(head);
        return treeHead;
    }
};


